Exercise 1.5: Object-Oriented Programming in Python
Learning Goals

‚óè	Apply object-oriented programming concepts to your Recipe app

Reflection Questions

1.	In your own words, what is object-oriented programming? What are the benefits of OOP?

  A. Object-oriented programming is a type of coding that follows DRY principals and keeps code non-repetitive, non-redundnat, and efficient.

2.	What are objects and classes in Python? Come up with a real-world example to illustrate how objects and classes work.

  A. Classes are a code template for creating objects, objects are variables that contain data and functions to manipulate the data. A good analogy to me is a class being a Build-a-Bear workshop blueprint, while a object is an instance that has all of the attributes of what the bear does and looks like (eg. fur color, sound it makes, size, stuffed animal type).

3.	In your own words, write brief explanations of the following OOP concepts; 100 to 200 words per method is fine. 

Method	                                                Description
Inheritance -	                        inheritance is a concept in OOP that allows a class to inherit attributes and methods from another class
Polymorphism -                        polymorphism is the ability of objects of different classes to be treated as objects of a base class
Operator Overloading -	              operator overloading is a way of voiding TypeError's by defining methods for them, examples of this being "__add__()" and "__sub()__"

