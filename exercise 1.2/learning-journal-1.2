Exercise 1.2: Data Types in Python
Learning Goals

●	Explain variables and data types in Python
●	Summarize the use of objects in Python
●	Create a data structure for your Recipe app

Reflection Questions

1.	Imagine you’re having a conversation with a future colleague about whether to use the iPython Shell instead of Python’s default shell. What reasons would you give to explain the benefits of using the iPython Shell over the default one?

The iPython shell is beneficial over the default shell is that the auto indenting feature allows for better visualization of elements.

2.	Python has a host of different data types that allow you to store and organize information. List 4 examples of data types that Python recognizes, briefly define them, and indicate whether they are scalar or non-scalar.

Data type		Definition															Scalar or Non-Scalar?
Tuples			Linear arrays that can store multiple values of any type and are immutable.							non-scalar
Lists			An immutable sequence data type which is used to store the collection of data which can be changed and rearranged.		non-scalar
Strings			Immutable characters that do not accept numbers as integers. 									non-scalar
Dictionaries		A set of items that stores objects using key-value pairs, each key being unique. 
		


3.	A frequent question at job interviews for Python developers is: what is the difference between lists and tuples in Python? Write down how you would respond.

A.
	Lists are mutable and can be modified while Tuples are immutable and cannot.

4.	In the task for this Exercise, you decided what you thought was the most suitable data structure for storing all the information for a recipe. Now, imagine you’re creating a language-learning app that helps users memorize vocabulary through flashcards. Users can input vocabulary words, definitions, and their category (noun, verb, etc.) into the flashcards. They can then quiz themselves by flipping through the flashcards. Think about the necessary data types and what would be the most suitable data structure for this language-learning app. Between tuples, lists, and dictionaries, which would you choose? Think about their respective advantages and limitations, and where flexibility might be useful if you were to continue developing the language-learning app beyond vocabulary memorization. 
